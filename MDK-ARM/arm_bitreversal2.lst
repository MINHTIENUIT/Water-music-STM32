


ARM Macro Assembler    Page 1 


    1 00000000         ;/* ----------------------------------------------------
                       ------------------
    2 00000000         ;* Copyright (C) 2010-2014 ARM Limited. All rights reser
                       ved.
    3 00000000         ;*
    4 00000000         ;* $Date:       19. March 2015 
    5 00000000         ;* $Revision:  V.1.4.5
    6 00000000         ;*
    7 00000000         ;* Project:  CMSIS DSP Library
    8 00000000         ;* Title:     arm_bitreversal2.S
    9 00000000         ;*
   10 00000000         ;* Description: This is the arm_bitreversal_32 function 
                       done in
   11 00000000         ;*              assembly for maximum speed.  This functi
                       on is called
   12 00000000         ;*              after doing an fft to reorder the output
                       .  The function
   13 00000000         ;*              is loop unrolled by 2. arm_bitreversal_1
                       6 as well.
   14 00000000         ;*
   15 00000000         ;* Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
   16 00000000         ;*
   17 00000000         ;* Redistribution and use in source and binary forms, wi
                       th or without
   18 00000000         ;* modification, are permitted provided that the followi
                       ng conditions
   19 00000000         ;* are met:
   20 00000000         ;*   - Redistributions of source code must retain the ab
                       ove copyright
   21 00000000         ;*     notice, this list of conditions and the following
                        disclaimer.
   22 00000000         ;*   - Redistributions in binary form must reproduce the
                        above copyright
   23 00000000         ;*     notice, this list of conditions and the following
                        disclaimer in
   24 00000000         ;*     the documentation and/or other materials provided
                        with the
   25 00000000         ;*     distribution.
   26 00000000         ;*   - Neither the name of ARM LIMITED nor the names of 
                       its contributors
   27 00000000         ;*     may be used to endorse or promote products derive
                       d from this
   28 00000000         ;*     software without specific prior written permissio
                       n.
   29 00000000         ;*
   30 00000000         ;* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AN
                       D CONTRIBUTORS
   31 00000000         ;* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUD
                       ING, BUT NOT
   32 00000000         ;* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
                        AND FITNESS
   33 00000000         ;* FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
                       SHALL THE
   34 00000000         ;* COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIR
                       ECT, INDIRECT,
   35 00000000         ;* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMA
                       GES (INCLUDING,
   36 00000000         ;* BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS O
                       R SERVICES;



ARM Macro Assembler    Page 2 


   37 00000000         ;* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTI
                       ON) HOWEVER
   38 00000000         ;* CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CON
                       TRACT, STRICT
   39 00000000         ;* LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE
                       ) ARISING IN
   40 00000000         ;* ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVI
                       SED OF THE
   41 00000000         ;* POSSIBILITY OF SUCH DAMAGE.
   42 00000000         ;* -----------------------------------------------------
                       --------------- */
   43 00000000         
   44 00000000         
   45 00000000                 AREA             ||.text||, CODE, READONLY, ALIG
N=2
   46 00000000         
   47 00000000                 THUMB
   48 00000000         
   49 00000000         ;/*
   50 00000000         ;* @brief  In-place bit reversal function.
   51 00000000         ;* @param[in, out] *pSrc        points to the in-place b
                       uffer of unknown 32-bit data type.
   52 00000000         ;* @param[in]      bitRevLen    bit reversal table lengt
                       h
   53 00000000         ;* @param[in]      *pBitRevTab  points to bit reversal t
                       able.
   54 00000000         ;* @return none.
   55 00000000         ;*/
   56 00000000                 EXPORT           arm_bitreversal_32
   57 00000000                 EXPORT           arm_bitreversal_16
   58 00000000         
   59 00000000         
   60 00000000         
   61 00000000         
   62 00000000         arm_bitreversal_32
                               PROC
   63 00000000 1C4B            ADDS             r3,r1,#1
   64 00000002 2B01            CMP              r3,#1
   65 00000004 BF98            IT               LS
   66 00000006 4770            BXLS             lr
   67 00000008 E92D 03F0       PUSH             {r4-r9}
   68 0000000C 1C91            ADDS             r1,r2,#2
   69 0000000E 089B            LSRS             r3,r3,#2
   70 00000010         arm_bitreversal_32_0                 ;/* loop unrolled b
                                                            y 2 */
   71 00000010 F8B1 8004       LDRH             r8,[r1,#4]
   72 00000014 F8B1 9002       LDRH             r9,[r1,#2]
   73 00000018 880A            LDRH             r2,[r1,#0]
   74 0000001A F831 CC02       LDRH             r12,[r1,#-2]
   75 0000001E 4480            ADD              r8,r0,r8
   76 00000020 4481            ADD              r9,r0,r9
   77 00000022 4402            ADD              r2,r0,r2
   78 00000024 4484            ADD              r12,r0,r12
   79 00000026 F8D9 7000       LDR              r7,[r9,#0]
   80 0000002A F8D8 6000       LDR              r6,[r8,#0]
   81 0000002E 6815            LDR              r5,[r2,#0]
   82 00000030 F8DC 4000       LDR              r4,[r12,#0]
   83 00000034 F8C9 6000       STR              r6,[r9,#0]
   84 00000038 F8C8 7000       STR              r7,[r8,#0]



ARM Macro Assembler    Page 3 


   85 0000003C F8CC 5000       STR              r5,[r12,#0]
   86 00000040 6014            STR              r4,[r2,#0]
   87 00000042 F8D9 7004       LDR              r7,[r9,#4]
   88 00000046 F8D8 6004       LDR              r6,[r8,#4]
   89 0000004A 6855            LDR              r5,[r2,#4]
   90 0000004C F8DC 4004       LDR              r4,[r12,#4]
   91 00000050 F8C9 6004       STR              r6,[r9,#4]
   92 00000054 F8C8 7004       STR              r7,[r8,#4]
   93 00000058 F8CC 5004       STR              r5,[r12,#4]
   94 0000005C 6054            STR              r4,[r2,#4]
   95 0000005E 3108            ADDS             r1,r1,#8
   96 00000060 1E5B            SUBS             r3,r3,#1
   97 00000062 D1D5            BNE              arm_bitreversal_32_0
   98 00000064 E8BD 03F0       POP              {r4-r9}
   99 00000068 4770            BX               lr
  100 0000006A                 ENDP
  101 0000006A         
  102 0000006A         arm_bitreversal_16
                               PROC
  103 0000006A 1C4B            ADDS             r3,r1,#1
  104 0000006C 2B01            CMP              r3,#1
  105 0000006E BF98            IT               LS
  106 00000070 4770            BXLS             lr
  107 00000072 E92D 03F0       PUSH             {r4-r9}
  108 00000076 1C91            ADDS             r1,r2,#2
  109 00000078 089B            LSRS             r3,r3,#2
  110 0000007A         arm_bitreversal_16_0                 ;/* loop unrolled b
                                                            y 2 */
  111 0000007A F8B1 8004       LDRH             r8,[r1,#4]
  112 0000007E F8B1 9002       LDRH             r9,[r1,#2]
  113 00000082 880A            LDRH             r2,[r1,#0]
  114 00000084 F831 CC02       LDRH             r12,[r1,#-2]
  115 00000088 EB00 0858       ADD              r8,r0,r8,LSR #1
  116 0000008C EB00 0959       ADD              r9,r0,r9,LSR #1
  117 00000090 EB00 0252       ADD              r2,r0,r2,LSR #1
  118 00000094 EB00 0C5C       ADD              r12,r0,r12,LSR #1
  119 00000098 F8D9 7000       LDR              r7,[r9,#0]
  120 0000009C F8D8 6000       LDR              r6,[r8,#0]
  121 000000A0 6815            LDR              r5,[r2,#0]
  122 000000A2 F8DC 4000       LDR              r4,[r12,#0]
  123 000000A6 F8C9 6000       STR              r6,[r9,#0]
  124 000000AA F8C8 7000       STR              r7,[r8,#0]
  125 000000AE F8CC 5000       STR              r5,[r12,#0]
  126 000000B2 6014            STR              r4,[r2,#0]
  127 000000B4 3108            ADDS             r1,r1,#8
  128 000000B6 1E5B            SUBS             r3,r3,#1
  129 000000B8 D1DF            BNE              arm_bitreversal_16_0
  130 000000BA E8BD 03F0       POP              {r4-r9}
  131 000000BE 4770            BX               lr
  132 000000C0                 ENDP
  133 000000C0         
  134 000000C0                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=stm32f4-disco\exe\arm_bitreversal2.d -ostm32f4-disco\exe\arm_bi
treversal2.o -I.\RTE\_STM32F4-DISCO -I"E:\program files\programs\Keil_v5\ARM\PA
CK\ARM\CMSIS\5.3.0\CMSIS\Include" -I"E:\program files\programs\Keil_v5\ARM\PACK
\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include" --predefi
ne="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 525" --predefine="_R
TE_ SETA 1" --predefine="STM32F407xx SETA 1" --list=arm_bitreversal2.lst ..\..\



ARM Macro Assembler    Page 4 


..\..\..\..\Drivers\CMSIS\DSP_Lib\Source\TransformFunctions\arm_bitreversal2.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

arm_bitreversal_16 0000006A

Symbol: arm_bitreversal_16
   Definitions
      At line 102 in file ..\..\..\..\..\..\Drivers\CMSIS\DSP_Lib\Source\Transf
ormFunctions\arm_bitreversal2.S
   Uses
      At line 57 in file ..\..\..\..\..\..\Drivers\CMSIS\DSP_Lib\Source\Transfo
rmFunctions\arm_bitreversal2.S
Comment: arm_bitreversal_16 used once
arm_bitreversal_16_0 0000007A

Symbol: arm_bitreversal_16_0
   Definitions
      At line 110 in file ..\..\..\..\..\..\Drivers\CMSIS\DSP_Lib\Source\Transf
ormFunctions\arm_bitreversal2.S
   Uses
      At line 129 in file ..\..\..\..\..\..\Drivers\CMSIS\DSP_Lib\Source\Transf
ormFunctions\arm_bitreversal2.S
Comment: arm_bitreversal_16_0 used once
arm_bitreversal_32 00000000

Symbol: arm_bitreversal_32
   Definitions
      At line 62 in file ..\..\..\..\..\..\Drivers\CMSIS\DSP_Lib\Source\Transfo
rmFunctions\arm_bitreversal2.S
   Uses
      At line 56 in file ..\..\..\..\..\..\Drivers\CMSIS\DSP_Lib\Source\Transfo
rmFunctions\arm_bitreversal2.S
Comment: arm_bitreversal_32 used once
arm_bitreversal_32_0 00000010

Symbol: arm_bitreversal_32_0
   Definitions
      At line 70 in file ..\..\..\..\..\..\Drivers\CMSIS\DSP_Lib\Source\Transfo
rmFunctions\arm_bitreversal2.S
   Uses
      At line 97 in file ..\..\..\..\..\..\Drivers\CMSIS\DSP_Lib\Source\Transfo
rmFunctions\arm_bitreversal2.S
Comment: arm_bitreversal_32_0 used once
|.text| 00000000

Symbol: |.text|
   Definitions
      At line 45 in file ..\..\..\..\..\..\Drivers\CMSIS\DSP_Lib\Source\Transfo
rmFunctions\arm_bitreversal2.S
   Uses
      None
Comment: |.text| unused
5 symbols
340 symbols in table
